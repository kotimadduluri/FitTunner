apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.fittuner"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "FitTuner"

            resValue "string", "addsAppId", GOOGLE_ADD_APP_ID
            it.buildConfigField('String', 'ADD_BANNER_UNIT_ID', GOOGLE_ADD_BANNER_UNIT_ID)
            it.buildConfigField('String', 'ADD_INTERSTITIAL_UNIT_ID', GOOGLE_ADD_INTERSTITIAL_UNIT_ID)
        }

        debug{
            debuggable true
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "FitTuner Dev"

            resValue "string", "addsAppId", GOOGLE_ADD_APP_ID
            it.buildConfigField('String', 'BANNER_UNIT_ID', GOOGLE_ADD_BANNER_UNIT_ID_TEST)
            it.buildConfigField('String', 'INTERSTITIAL_UNIT_ID', GOOGLE_ADD_INTERSTITIAL_UNIT_ID_TEST)
        }

        qa{
            debuggable true
            applicationIdSuffix ".test"
            resValue "string", "app_name", "FitTuner Test"

            resValue "string", "addsAppId", GOOGLE_ADD_APP_ID
            it.buildConfigField('String', 'BANNER_UNIT_ID', GOOGLE_ADD_BANNER_UNIT_ID_TEST)
            it.buildConfigField('String', 'INTERSTITIAL_UNIT_ID', GOOGLE_ADD_INTERSTITIAL_UNIT_ID_TEST)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //navigation
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    //meterial
    implementation 'com.google.android.material:material:1.2.0'

    //hilt
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"

    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    //room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //easy permissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    //adds
    implementation 'com.google.android.gms:play-services-ads:19.3.0'

    //analytics
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    //paging
    def paging_version = "2.1.2"

    implementation "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx

    // optional - RxJava support
   // implementation "androidx.paging:paging-rxjava2:$paging_version" // For Kotlin use paging-rxjava2-ktx
}

